#include <iostream>
using namespace std;
//第一步:以每 2 位为一组，组内进行高低位交换
//第二步：在上面的基础上，以每 4 位为 1 组，组内高低位进行交换
//第三步：以每 8 位为一组，组内高低位进行交换
//第四步：以每16位为一组，组内高低位进行交换

// 无符号逆序
// 数34520的二进制表示：
// 10000110 11011000
// 先分别取原数 10000110 11011000 的奇数位和偶数位，将空余位用 0 填充：
// 原数：  10000110 11011000
// 奇数位： 10000010 10001000
// 偶数位： 00000100 01010000
// 再将奇数位右移一位，偶数位左移一位，此时将两个数据相或即可以达到奇偶位上数据交换的效果：

// 原数：  10000110 11011000
// 奇数位右移一位： 0 10000010 1000100
// 偶数位左移一位：0000100 01010000 0
// 两数相或得到： 01001001 11100100
// 上面的方法用位操作可以表示为：

// 取a的奇数位并用 0 进行填充可以表示为：a & 0xAAAA
// 取a的偶数为并用 0 进行填充可以表示为：a & 0x5555 因此，上面的第一步可以表示为：
// a = ((a & 0xAAAA) >> 1) | ((a & 0x5555) << 1)
// 同理，可以得到其第二、三和四步为：
// a = ((a & 0xCCCC) >> 2) | ((a & 0x3333) << 2)
// a = ((a & 0xF0F0) >> 4) | ((a & 0x0F0F) << 4)
// a = ((a & 0xFF00) >> 8) | ((a & 0x00FF) << 8)
// 因此整个操作为：

int reverse(int a)
{
    a = ((a & 0xAAAA) >> 1) | ((a & 0x5555) << 1);
    a = ((a & 0xCCCC) >> 2) | ((a & 0x3333) << 2);
    a = ((a & 0xF0F0) >> 4) | ((a & 0x0F0F) << 4);
    a = ((a & 0xFF00) >> 8) | ((a & 0x00FF) << 8);
    return a;
}
int main()
{
    cout << reverse(7009);
}